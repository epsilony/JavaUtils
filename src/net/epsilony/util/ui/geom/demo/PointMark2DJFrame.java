/*
 * PointMark2DJFrame.java
 *
 * Created on 2008年7月31日, 下午5:36
 */
package net.epsilony.util.ui.geom.demo;

import java.awt.Cursor;
import net.epsilony.util.ui.geom.*;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.event.KeyAdapter;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.Area;
import java.awt.geom.CubicCurve2D;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import javax.swing.JPanel;
import net.epsilony.util.ui.Model2D.Element2D;
import net.epsilony.util.ui.Model2D.Element2DManager;
import net.epsilony.util.ui.Model2D.CubicCurve2DElement;

/**
 *
 * @author  epsilon
 */
public class PointMark2DJFrame extends javax.swing.JFrame {

    /** Creates new form PointMark2DJFrame */
    public PointMark2DJFrame() {
        initComponents();
        manager=new Element2DManager(jPanel);
        managerMouseAdapter=manager.getMouseAdapter();
        double w=jPanel.getWidth();
        double h=jPanel.getHeight();
        Random r=new Random(160123L);
        for(int i=0;i<10;i++){
            manager.elementsAdd(new CubicCurve2DElement(w*r.nextDouble(), h*r.nextDouble(), w*r.nextDouble(), h,w*r.nextDouble(), h*r.nextDouble(),w*r.nextDouble(), h*r.nextDouble()));
        }
        System.out.println("begin");
        repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = makeJPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel.setName("Test1122"); // NOI18N
        jPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanelMouseReleased(evt);
            }
        });
        jPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanelMouseMoved(evt);
            }
        });
        jPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanelKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanelKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPanelKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 374, Short.MAX_VALUE)
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMouseEntered
// TODO add your handling code here:
//    inside = true;
//    JPanelImpl jP = (JPanelImpl) evt.getComponent();
//    Graphics2D gr = (Graphics2D) jP.getGraphics();
//    gr.setXORMode(Color.white);
//    gr.setColor(Color.GRAY);
//    if (former != null) {
//        gr.draw(former);
//    }
}//GEN-LAST:event_jPanelMouseEntered

private void jPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMousePressed
// TODO add your handling code here
    switch (evt.getButton()) {
        case MouseEvent.BUTTON1:
            setCursor(Cursor.getDefaultCursor());
            break;
        case MouseEvent.BUTTON2:
            Element2D[] elems=manager.getElements();
            int t=0;
            for(Element2D elem:elems){
                if (t%3==0){
                    manager.highlightsAdd(elem);
                }
                t++;
            }
            manager.setHighlight(true);
            break;
        case MouseEvent.BUTTON3:
            setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));

    }
}//GEN-LAST:event_jPanelMousePressed
   
boolean inside = false;
    Shape former = null;
    
private void jPanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMouseMoved
// TODO add your handling code here:
    managerMouseAdapter.mouseMoved(evt);
}//GEN-LAST:event_jPanelMouseMoved

private void jPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMouseExited
// TODO add your handling code here:
//    setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
    managerMouseAdapter.mouseExited(evt);
}//GEN-LAST:event_jPanelMouseExited


private void jPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMouseClicked
    if(evt.getClickCount()>1&&evt.getButton()==MouseEvent.BUTTON1)
    {   
        manager.createElement("CubicCurve");
        return;
    }
    managerMouseAdapter.mouseClicked(evt);
}//GEN-LAST:event_jPanelMouseClicked

private void jPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelMouseReleased
    switch(evt.getButton()){
        case MouseEvent.BUTTON2:
            manager.setHighlight(false);
            break;
            
    }
}//GEN-LAST:event_jPanelMouseReleased

private void jPanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanelKeyPressed
// TODO add your handling code here:

    //managerKeyAdapter.keyPressed(evt);
}//GEN-LAST:event_jPanelKeyPressed

private void jPanelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanelKeyReleased
// TODO add your handling code here:

   // managerKeyAdapter.keyReleased(evt);
}//GEN-LAST:event_jPanelKeyReleased

private void jPanelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanelKeyTyped
// TODO add your handling code here:

}//GEN-LAST:event_jPanelKeyTyped

    /**
    * @param args the command line arguments
    */

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PointMark2DJFrame().setVisible(true);
            }
        });
    }
    
    private JPanel makeJPanel(){
        return new JPanelImpl();        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel;
    // End of variables declaration//GEN-END:variables
    
    Element2DManager manager=null;
    
    MouseAdapter managerMouseAdapter=null;
    
    private class JPanelImpl extends JPanel {
        public JPanelImpl() {
        }
        public Area a;
        String[] strs = {"*", "+", "o", "X", "R", "."};
        List<Shape> shapeList = new LinkedList<Shape>();
        {
            double tt = 0;
            for (String t : strs) {
                shapeList.add(new PointMark2D(31 + tt, 30, 5, t));
                tt += 30;
            }
        }

        @Override
        public void paintComponent(Graphics arg0) {
            super.paintComponents(arg0);
            Graphics2D gr = (Graphics2D) arg0;
            gr.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            manager.paint(arg0);
        }     
    }
}
