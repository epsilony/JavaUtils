/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package net.epsilony.utils;



import org.bridj.*;     // C interop and core classes
import org.bridj.ann.*; // annotations
import org.bridj.cpp.*; // C++ runtime
import static org.bridj.Pointer.*; // pointer factories such as allocateInt(), pointerTo(java.nio.Buffer), etc...

/**
 * Wrapper for library <b>tet</b><br> This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br> a tool written by
 * <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br> For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a
 * href="http://bridj.googlecode.com/">BridJ</a> .
 * 
 * This tet gen uses a patched version of TetGen which is more suitable for Java native access.
 * The patched version can be find at <a href="http://epsilony.net/Java/TetGen">this page</a>
 */
@Library("tet")
public class TetLibrary {

    static {
        BridJ.register();
    }

    public static class tetgenio extends CPPObject {

        public tetgenio() {
            super();
        }
        public static final int FILENAMESIZE = (int) 1024;
        public static final int INPUTLINESIZE = (int) 1024;

        public static class polygon extends StructObject {

            public polygon() {
                super();
            }

            @Field(0)
            public Pointer<Integer> vertexlist() {
                return this.io.getPointerField(this, 0);
            }

            @Field(0)
            public polygon vertexlist(Pointer<Integer> vertexlist) {
                this.io.setPointerField(this, 0, vertexlist);
                return this;
            }

            @Field(1)
            public int numberofvertices() {
                return this.io.getIntField(this, 1);
            }

            @Field(1)
            public polygon numberofvertices(int numberofvertices) {
                this.io.setIntField(this, 1, numberofvertices);
                return this;
            }

            public polygon(Pointer pointer) {
                super(pointer);
            }
        };

//        public static native void init(Pointer<tetgenio.polygon> p);
        public static class facet extends StructObject {

            public facet() {
                super();
            }

            @Field(0)
            public Pointer<tetgenio.polygon> polygonlist() {
                return this.io.getPointerField(this, 0);
            }

            @Field(0)
            public facet polygonlist(Pointer<tetgenio.polygon> polygonlist) {
                this.io.setPointerField(this, 0, polygonlist);
                return this;
            }

            @Field(1)
            public int numberofpolygons() {
                return this.io.getIntField(this, 1);
            }

            @Field(1)
            public facet numberofpolygons(int numberofpolygons) {
                this.io.setIntField(this, 1, numberofpolygons);
                return this;
            }

            @Field(2)
            public Pointer<Double> holelist() {
                return this.io.getPointerField(this, 2);
            }

            @Field(2)
            public facet holelist(Pointer<Double> holelist) {
                this.io.setPointerField(this, 2, holelist);
                return this;
            }

            @Field(3)
            public int numberofholes() {
                return this.io.getIntField(this, 3);
            }

            @Field(3)
            public facet numberofholes(int numberofholes) {
                this.io.setIntField(this, 3, numberofholes);
                return this;
            }

            public facet(Pointer pointer) {
                super(pointer);
            }
        };

//        @Name("init")
//        public static native void init$2(Pointer<tetgenio.facet> f);
        public static class voroedge extends StructObject {

            public voroedge() {
                super();
            }

            @Field(0)
            public int v1() {
                return this.io.getIntField(this, 0);
            }

            @Field(0)
            public voroedge v1(int v1) {
                this.io.setIntField(this, 0, v1);
                return this;
            }

            @Field(1)
            public int v2() {
                return this.io.getIntField(this, 1);
            }

            @Field(1)
            public voroedge v2(int v2) {
                this.io.setIntField(this, 1, v2);
                return this;
            }

            @Array({3})
            @Field(2)
            public Pointer<Double> vnormal() {
                return this.io.getPointerField(this, 2);
            }

            public voroedge(Pointer pointer) {
                super(pointer);
            }
        };

        public static class vorofacet extends StructObject {

            public vorofacet() {
                super();
            }

            @Field(0)
            public int c1() {
                return this.io.getIntField(this, 0);
            }

            @Field(0)
            public vorofacet c1(int c1) {
                this.io.setIntField(this, 0, c1);
                return this;
            }

            @Field(1)
            public int c2() {
                return this.io.getIntField(this, 1);
            }

            @Field(1)
            public vorofacet c2(int c2) {
                this.io.setIntField(this, 1, c2);
                return this;
            }

            @Field(2)
            public Pointer<Integer> elist() {
                return this.io.getPointerField(this, 2);
            }

            @Field(2)
            public vorofacet elist(Pointer<Integer> elist) {
                this.io.setPointerField(this, 2, elist);
                return this;
            }

            public vorofacet(Pointer pointer) {
                super(pointer);
            }
        };

        public static class pbcgroup extends StructObject {

            public pbcgroup() {
                super();
            }

            @Field(0)
            public int fmark1() {
                return this.io.getIntField(this, 0);
            }

            @Field(0)
            public pbcgroup fmark1(int fmark1) {
                this.io.setIntField(this, 0, fmark1);
                return this;
            }

            @Field(1)
            public int fmark2() {
                return this.io.getIntField(this, 1);
            }

            @Field(1)
            public pbcgroup fmark2(int fmark2) {
                this.io.setIntField(this, 1, fmark2);
                return this;
            }

            @Array({4, 4})
            @Field(2)
            public Pointer<Double> transmat() {
                return this.io.getPointerField(this, 2);
            }

            @Field(3)
            public int numberofpointpairs() {
                return this.io.getIntField(this, 3);
            }

            @Field(3)
            public pbcgroup numberofpointpairs(int numberofpointpairs) {
                this.io.setIntField(this, 3, numberofpointpairs);
                return this;
            }

            @Field(4)
            public Pointer<Integer> pointpairlist() {
                return this.io.getPointerField(this, 4);
            }

            @Field(4)
            public pbcgroup pointpairlist(Pointer<Integer> pointpairlist) {
                this.io.setPointerField(this, 4, pointpairlist);
                return this;
            }

            public pbcgroup(Pointer pointer) {
                super(pointer);
            }
        };

        public static abstract class TetSizeFunc extends Callback<TetSizeFunc> {

            public abstract boolean apply(Pointer<Double> doublePtr1, Pointer<Double> doublePtr2, Pointer<Double> doublePtr3, Pointer<Double> doublePtr4, Pointer<Double> doublePtr5, double double1);
        };
        /// Items are numbered starting from 'firstnumber' (0 or 1), default is 0.
        @Field(0)
        public int firstnumber() {
            return this.io.getIntField(this, 0);
        }
        /// Items are numbered starting from 'firstnumber' (0 or 1), default is 0.

        @Field(0)
        public tetgenio firstnumber(int firstnumber) {
            this.io.setIntField(this, 0, firstnumber);
            return this;
        }
        /// Dimension of the mesh (2 or 3), default is 3.

        @Field(1)
        public int mesh_dim() {
            return this.io.getIntField(this, 1);
        }
        /// Dimension of the mesh (2 or 3), default is 3.

        @Field(1)
        public tetgenio mesh_dim(int mesh_dim) {
            this.io.setIntField(this, 1, mesh_dim);
            return this;
        }
        /// Does the lines in .node file contain index or not, default is TRUE.

        @Field(2)
        public boolean useindex() {
            return this.io.getBooleanField(this, 2);
        }
        /// Does the lines in .node file contain index or not, default is TRUE.

        @Field(2)
        public tetgenio useindex(boolean useindex) {
            this.io.setBooleanField(this, 2, useindex);
            return this;
        }
        /// `pointmarkerlist':  An array of point markers; one int per point.

        @Field(3)
        public Pointer<Double> pointlist() {
            return this.io.getPointerField(this, 3);
        }
        /// `pointmarkerlist':  An array of point markers; one int per point.

        @Field(3)
        public tetgenio pointlist(Pointer<Double> pointlist) {
            this.io.setPointerField(this, 3, pointlist);
            return this;
        }

        @Field(4)
        public Pointer<Double> pointattributelist() {
            return this.io.getPointerField(this, 4);
        }

        @Field(4)
        public tetgenio pointattributelist(Pointer<Double> pointattributelist) {
            this.io.setPointerField(this, 4, pointattributelist);
            return this;
        }

        @Field(5)
        public Pointer<Double> pointmtrlist() {
            return this.io.getPointerField(this, 5);
        }

        @Field(5)
        public tetgenio pointmtrlist(Pointer<Double> pointmtrlist) {
            this.io.setPointerField(this, 5, pointmtrlist);
            return this;
        }

        @Field(6)
        public Pointer<Integer> pointmarkerlist() {
            return this.io.getPointerField(this, 6);
        }

        @Field(6)
        public tetgenio pointmarkerlist(Pointer<Integer> pointmarkerlist) {
            this.io.setPointerField(this, 6, pointmarkerlist);
            return this;
        }

        @Field(7)
        public int numberofpoints() {
            return this.io.getIntField(this, 7);
        }

        @Field(7)
        public tetgenio numberofpoints(int numberofpoints) {
            this.io.setIntField(this, 7, numberofpoints);
            return this;
        }

        @Field(8)
        public int numberofpointattributes() {
            return this.io.getIntField(this, 8);
        }

        @Field(8)
        public tetgenio numberofpointattributes(int numberofpointattributes) {
            this.io.setIntField(this, 8, numberofpointattributes);
            return this;
        }

        @Field(9)
        public int numberofpointmtrs() {
            return this.io.getIntField(this, 9);
        }

        @Field(9)
        public tetgenio numberofpointmtrs(int numberofpointmtrs) {
            this.io.setIntField(this, 9, numberofpointmtrs);
            return this;
        }
        /// element.  Output only.

        @Field(10)
        public Pointer<Integer> tetrahedronlist() {
            return this.io.getPointerField(this, 10);
        }
        /// element.  Output only.

        @Field(10)
        public tetgenio tetrahedronlist(Pointer<Integer> tetrahedronlist) {
            this.io.setPointerField(this, 10, tetrahedronlist);
            return this;
        }

        @Field(11)
        public Pointer<Double> tetrahedronattributelist() {
            return this.io.getPointerField(this, 11);
        }

        @Field(11)
        public tetgenio tetrahedronattributelist(Pointer<Double> tetrahedronattributelist) {
            this.io.setPointerField(this, 11, tetrahedronattributelist);
            return this;
        }

        @Field(12)
        public Pointer<Double> tetrahedronvolumelist() {
            return this.io.getPointerField(this, 12);
        }

        @Field(12)
        public tetgenio tetrahedronvolumelist(Pointer<Double> tetrahedronvolumelist) {
            this.io.setPointerField(this, 12, tetrahedronvolumelist);
            return this;
        }

        @Field(13)
        public Pointer<Integer> neighborlist() {
            return this.io.getPointerField(this, 13);
        }

        @Field(13)
        public tetgenio neighborlist(Pointer<Integer> neighborlist) {
            this.io.setPointerField(this, 13, neighborlist);
            return this;
        }

        @Field(14)
        public int numberoftetrahedra() {
            return this.io.getIntField(this, 14);
        }

        @Field(14)
        public tetgenio numberoftetrahedra(int numberoftetrahedra) {
            this.io.setIntField(this, 14, numberoftetrahedra);
            return this;
        }

        @Field(15)
        public int numberofcorners() {
            return this.io.getIntField(this, 15);
        }

        @Field(15)
        public tetgenio numberofcorners(int numberofcorners) {
            this.io.setIntField(this, 15, numberofcorners);
            return this;
        }

        @Field(16)
        public int numberoftetrahedronattributes() {
            return this.io.getIntField(this, 16);
        }

        @Field(16)
        public tetgenio numberoftetrahedronattributes(int numberoftetrahedronattributes) {
            this.io.setIntField(this, 16, numberoftetrahedronattributes);
            return this;
        }
        /// `facetmarkerlist':  An array of facet markers; one int per facet.

        @Field(17)
        public Pointer<tetgenio.facet> facetlist() {
            return this.io.getPointerField(this, 17);
        }
        /// `facetmarkerlist':  An array of facet markers; one int per facet.

        @Field(17)
        public tetgenio facetlist(Pointer<tetgenio.facet> facetlist) {
            this.io.setPointerField(this, 17, facetlist);
            return this;
        }

        @Field(18)
        public Pointer<Integer> facetmarkerlist() {
            return this.io.getPointerField(this, 18);
        }

        @Field(18)
        public tetgenio facetmarkerlist(Pointer<Integer> facetmarkerlist) {
            this.io.setPointerField(this, 18, facetmarkerlist);
            return this;
        }

        @Field(19)
        public int numberoffacets() {
            return this.io.getIntField(this, 19);
        }

        @Field(19)
        public tetgenio numberoffacets(int numberoffacets) {
            this.io.setIntField(this, 19, numberoffacets);
            return this;
        }
        /// remaining holes. Three REALs per hole.

        @Field(20)
        public Pointer<Double> holelist() {
            return this.io.getPointerField(this, 20);
        }
        /// remaining holes. Three REALs per hole.

        @Field(20)
        public tetgenio holelist(Pointer<Double> holelist) {
            this.io.setPointerField(this, 20, holelist);
            return this;
        }

        @Field(21)
        public int numberofholes() {
            return this.io.getIntField(this, 21);
        }

        @Field(21)
        public tetgenio numberofholes(int numberofholes) {
            this.io.setIntField(this, 21, numberofholes);
            return this;
        }
        /// `a' switch (with no number following).

        @Field(22)
        public Pointer<Double> regionlist() {
            return this.io.getPointerField(this, 22);
        }
        /// `a' switch (with no number following).

        @Field(22)
        public tetgenio regionlist(Pointer<Double> regionlist) {
            this.io.setPointerField(this, 22, regionlist);
            return this;
        }

        @Field(23)
        public int numberofregions() {
            return this.io.getIntField(this, 23);
        }

        @Field(23)
        public tetgenio numberofregions(int numberofregions) {
            this.io.setIntField(this, 23, numberofregions);
            return this;
        }
        /// area bound.

        @Field(24)
        public Pointer<Double> facetconstraintlist() {
            return this.io.getPointerField(this, 24);
        }
        /// area bound.

        @Field(24)
        public tetgenio facetconstraintlist(Pointer<Double> facetconstraintlist) {
            this.io.setPointerField(this, 24, facetconstraintlist);
            return this;
        }

        @Field(25)
        public int numberoffacetconstraints() {
            return this.io.getIntField(this, 25);
        }

        @Field(25)
        public tetgenio numberoffacetconstraints(int numberoffacetconstraints) {
            this.io.setIntField(this, 25, numberoffacetconstraints);
            return this;
        }
        /// [2]) is its maximum length bound.

        @Field(26)
        public Pointer<Double> segmentconstraintlist() {
            return this.io.getPointerField(this, 26);
        }
        /// [2]) is its maximum length bound.

        @Field(26)
        public tetgenio segmentconstraintlist(Pointer<Double> segmentconstraintlist) {
            this.io.setPointerField(this, 26, segmentconstraintlist);
            return this;
        }

        @Field(27)
        public int numberofsegmentconstraints() {
            return this.io.getIntField(this, 27);
        }

        @Field(27)
        public tetgenio numberofsegmentconstraints(int numberofsegmentconstraints) {
            this.io.setIntField(this, 27, numberofsegmentconstraints);
            return this;
        }
        /// 'pbcgrouplist':  An array of periodic boundary condition groups.

        @Field(28)
        public Pointer<tetgenio.pbcgroup> pbcgrouplist() {
            return this.io.getPointerField(this, 28);
        }
        /// 'pbcgrouplist':  An array of periodic boundary condition groups.

        @Field(28)
        public tetgenio pbcgrouplist(Pointer<tetgenio.pbcgroup> pbcgrouplist) {
            this.io.setPointerField(this, 28, pbcgrouplist);
            return this;
        }

        @Field(29)
        public int numberofpbcgroups() {
            return this.io.getIntField(this, 29);
        }

        @Field(29)
        public tetgenio numberofpbcgroups(int numberofpbcgroups) {
            this.io.setIntField(this, 29, numberofpbcgroups);
            return this;
        }
        /// `trifacemarkerlist':  An array of face markers; one int per face.

        @Field(30)
        public Pointer<Integer> trifacelist() {
            return this.io.getPointerField(this, 30);
        }
        /// `trifacemarkerlist':  An array of face markers; one int per face.

        @Field(30)
        public tetgenio trifacelist(Pointer<Integer> trifacelist) {
            this.io.setPointerField(this, 30, trifacelist);
            return this;
        }

        @Field(31)
        public Pointer<Integer> adjtetlist() {
            return this.io.getPointerField(this, 31);
        }

        @Field(31)
        public tetgenio adjtetlist(Pointer<Integer> adjtetlist) {
            this.io.setPointerField(this, 31, adjtetlist);
            return this;
        }

        @Field(32)
        public Pointer<Integer> trifacemarkerlist() {
            return this.io.getPointerField(this, 32);
        }

        @Field(32)
        public tetgenio trifacemarkerlist(Pointer<Integer> trifacemarkerlist) {
            this.io.setPointerField(this, 32, trifacemarkerlist);
            return this;
        }

        @Field(33)
        public int numberoftrifaces() {
            return this.io.getIntField(this, 33);
        }

        @Field(33)
        public tetgenio numberoftrifaces(int numberoftrifaces) {
            this.io.setIntField(this, 33, numberoftrifaces);
            return this;
        }
        /// `edgemarkerlist':  An array of edge markers; one int per edge.

        @Field(34)
        public Pointer<Integer> edgelist() {
            return this.io.getPointerField(this, 34);
        }
        /// `edgemarkerlist':  An array of edge markers; one int per edge.

        @Field(34)
        public tetgenio edgelist(Pointer<Integer> edgelist) {
            this.io.setPointerField(this, 34, edgelist);
            return this;
        }

        @Field(35)
        public Pointer<Integer> edgemarkerlist() {
            return this.io.getPointerField(this, 35);
        }

        @Field(35)
        public tetgenio edgemarkerlist(Pointer<Integer> edgemarkerlist) {
            this.io.setPointerField(this, 35, edgemarkerlist);
            return this;
        }

        @Field(36)
        public int numberofedges() {
            return this.io.getIntField(this, 36);
        }

        @Field(36)
        public tetgenio numberofedges(int numberofedges) {
            this.io.setIntField(this, 36, numberofedges);
            return this;
        }
        /// the length of this array.

        @Field(37)
        public Pointer<Double> vpointlist() {
            return this.io.getPointerField(this, 37);
        }
        /// the length of this array.

        @Field(37)
        public tetgenio vpointlist(Pointer<Double> vpointlist) {
            this.io.setPointerField(this, 37, vpointlist);
            return this;
        }

        @Field(38)
        public Pointer<tetgenio.voroedge> vedgelist() {
            return this.io.getPointerField(this, 38);
        }

        @Field(38)
        public tetgenio vedgelist(Pointer<tetgenio.voroedge> vedgelist) {
            this.io.setPointerField(this, 38, vedgelist);
            return this;
        }

        @Field(39)
        public Pointer<tetgenio.vorofacet> vfacetlist() {
            return this.io.getPointerField(this, 39);
        }

        @Field(39)
        public tetgenio vfacetlist(Pointer<tetgenio.vorofacet> vfacetlist) {
            this.io.setPointerField(this, 39, vfacetlist);
            return this;
        }

        @Field(40)
        public Pointer<Pointer<Integer>> vcelllist() {
            return this.io.getPointerField(this, 40);
        }

        @Field(40)
        public tetgenio vcelllist(Pointer<Pointer<Integer>> vcelllist) {
            this.io.setPointerField(this, 40, vcelllist);
            return this;
        }

        @Field(41)
        public int numberofvpoints() {
            return this.io.getIntField(this, 41);
        }

        @Field(41)
        public tetgenio numberofvpoints(int numberofvpoints) {
            this.io.setIntField(this, 41, numberofvpoints);
            return this;
        }

        @Field(42)
        public int numberofvedges() {
            return this.io.getIntField(this, 42);
        }

        @Field(42)
        public tetgenio numberofvedges(int numberofvedges) {
            this.io.setIntField(this, 42, numberofvedges);
            return this;
        }

        @Field(43)
        public int numberofvfacets() {
            return this.io.getIntField(this, 43);
        }

        @Field(43)
        public tetgenio numberofvfacets(int numberofvfacets) {
            this.io.setIntField(this, 43, numberofvfacets);
            return this;
        }

        @Field(44)
        public int numberofvcells() {
            return this.io.getIntField(this, 44);
        }

        @Field(44)
        public tetgenio numberofvcells(int numberofvcells) {
            this.io.setIntField(this, 44, numberofvcells);
            return this;
        }
        /// A callback function.

        @Field(45)
        public Pointer<tetgenio.TetSizeFunc> tetunsuitable() {
            return this.io.getPointerField(this, 45);
        }
        /// A callback function.

        @Field(45)
        public tetgenio tetunsuitable(Pointer<tetgenio.TetSizeFunc> tetunsuitable) {
            this.io.setPointerField(this, 45, tetunsuitable);
            return this;
        }
//	public native boolean load_node_call(Pointer<FILE > infile, int markers, Pointer<Byte > nodefilename);

        public native boolean load_node(Pointer<Byte> filebasename);

        public native boolean load_var(Pointer<Byte> charPtr1);

        public native boolean load_mtr(Pointer<Byte> charPtr1);

        public native boolean load_poly(Pointer<Byte> charPtr1);

        public native boolean load_pbc(Pointer<Byte> charPtr1);

        public native boolean load_off(Pointer<Byte> charPtr1);

        public native boolean load_ply(Pointer<Byte> charPtr1);

        public native boolean load_stl(Pointer<Byte> charPtr1);

        public native boolean load_medit(Pointer<Byte> charPtr1);

        public native boolean load_vtk(Pointer<Byte> charPtr1);

        public native boolean load_plc(Pointer<Byte> charPtr1, int int1);

        public native boolean load_tetmesh(Pointer<Byte> charPtr1);

        public native void save_nodes(Pointer<Byte> charPtr1);

        public native void save_elements(Pointer<Byte> charPtr1);

        public native void save_faces(Pointer<Byte> charPtr1);

        public native void save_edges(Pointer<Byte> charPtr1);

        public native void save_neighbors(Pointer<Byte> charPtr1);

        public native void save_poly(Pointer<Byte> charPtr1);
//	public native Pointer<Byte > readline(Pointer<Byte > string, Pointer<FILE > infile, Pointer<Integer > linenumber);

        public native Pointer<Byte> findnextfield(Pointer<Byte> string);
//	public native Pointer<Byte > readnumberline(Pointer<Byte > string, Pointer<FILE > infile, Pointer<Byte > infilename);

        public native Pointer<Byte> findnextnumber(Pointer<Byte> string);
        public native void initialize();

        public native void deinitialize();

        @Name("tetgenio")
        public native int tetgenio$2();

        public tetgenio(Pointer pointer) {
            super(pointer);
        }
    }

    public static native void tetrahedralize(Pointer<Byte> switches, Pointer<tetgenio> in, Pointer<tetgenio> out, Pointer<tetgenio> addin,Pointer<tetgenio> bgmin);

    public static void tetrahedralize(Pointer<Byte> switches, Pointer<tetgenio> in, Pointer<tetgenio> out) {
        tetrahedralize(switches, in, out, null, null);
    }

    public static void main(String[] args) {
        tetgenio in = new tetgenio();
        System.out.println("in = " + in.numberofcorners());
        
    }
//        tetgenio in = new tetgenio();
//        in.initialize();
//        tetgenio out = new tetgenio();
//        out.initialize();
//
//        in.firstnumber(1);
//        in.numberofpoints(8);
//        double[] pointsArr = new double[]{
//            0, 0, 0,
//            2, 0, 0,
//            2, 2, 0,
//            0, 2, 0,
//            0, 0, 12,
//            2, 0, 12,
//            2, 2, 12,
//            0, 2, 12
//        };
//        in.pointlist(pointerToDoubles(pointsArr));
//        
//        in.numberoffacets(6);
//        Pointer<tetgenio.facet> pt=allocateArray(pointerTo(new tetgenio.facet()).getTargetType(), 6);
//        NativeList<tetgenio.facet> asList = pt.asList();
//        asList.set(0,new tetgenio.facet());
//        asList.get(0).numberofholes(33);
//        asList.set(1,new tetgenio.facet());
//        asList.get(1).numberofholes(44);
//        NativeList<tetgenio.facet> asList1 = pt.asList();
//        System.out.println("aslist1.size() = " + asList1.size());
//        for(tetgenio.facet f:asList1){
//            System.out.println("f.numberofholes = " + f.numberofholes());
//        }
//                                                               //        in.facetlist(allo)
//                                                       //in.facetlist = new tetgenio::facet[in.numberoffacets];
//                                                       //in.facetmarkerlist = new int[in.numberoffacets];
//                                                       //// Facet 1. The leftmost facet.
//                                                       //f = &in.facetlist[0];
//                                                       //f->numberofpolygons = 1;
//                                                       //f->polygonlist = new tetgenio::polygon[f->numberofpolygons];
//                                                       //f->numberofholes = 0;
//                                                       //f->holelist = NULL;
//                                                       //p = &f->polygonlist[0];
//                                                       //p->numberofvertices = 4;
//                                                       //p->vertexlist = new int[p->numberofvertices];
//                                                       //p->vertexlist[0] = 1;
//                                                       //p->vertexlist[1] = 2;
//                                                       //p->vertexlist[2] = 3;
//
//    }
}